// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PathfinderHonorManager.DataAccess;

#nullable disable

namespace PathfinderHonorManager.Migrations
{
    [DbContext(typeof(PathfinderContext))]
    partial class PathfinderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PathfinderHonorManager.Model.Achievement", b =>
                {
                    b.Property<Guid>("AchievementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("achievement_id");

                    b.Property<int>("AchievementSequenceOrder")
                        .HasColumnType("integer")
                        .HasColumnName("sequence_order");

                    b.Property<Guid?>("CategoryID")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Grade")
                        .HasColumnType("integer")
                        .HasColumnName("grade");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.HasKey("AchievementID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("Grade");

                    b.ToTable("achievement", (string)null);
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("CategoryName")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("CategorySequenceOrder")
                        .HasColumnType("integer")
                        .HasColumnName("sequence_order");

                    b.HasKey("CategoryID");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.Club", b =>
                {
                    b.Property<Guid>("ClubID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("club_id");

                    b.Property<string>("ClubCode")
                        .HasColumnType("text")
                        .HasColumnName("club_code");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("ClubID");

                    b.ToTable("club", (string)null);
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.Honor", b =>
                {
                    b.Property<Guid>("HonorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("honor_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PatchFilename")
                        .HasColumnType("text")
                        .HasColumnName("patch_path");

                    b.Property<string>("WikiPath")
                        .HasColumnType("text")
                        .HasColumnName("wiki_path");

                    b.HasKey("HonorID");

                    b.ToTable("honor", (string)null);
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.Pathfinder", b =>
                {
                    b.Property<Guid>("PathfinderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("pathfinder_id");

                    b.Property<Guid>("ClubID")
                        .HasColumnType("uuid")
                        .HasColumnName("club_id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_timestamp");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<int?>("Grade")
                        .HasColumnType("integer")
                        .HasColumnName("grade");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_timestamp");

                    b.HasKey("PathfinderID");

                    b.HasIndex("ClubID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Grade");

                    b.ToTable("pathfinder", (string)null);
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.PathfinderAchievement", b =>
                {
                    b.Property<Guid>("PathfinderAchievementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("pathfinder_achievement_id");

                    b.Property<DateTime?>("AchieveTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("achieve_timestamp");

                    b.Property<Guid>("AchievementID")
                        .HasColumnType("uuid")
                        .HasColumnName("achievement_id");

                    b.Property<DateTime>("CreateTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_timestamp");

                    b.Property<bool>("IsAchieved")
                        .HasColumnType("boolean")
                        .HasColumnName("is_achieved");

                    b.Property<Guid>("PathfinderID")
                        .HasColumnType("uuid")
                        .HasColumnName("pathfinder_id");

                    b.HasKey("PathfinderAchievementID");

                    b.HasIndex("AchievementID");

                    b.HasIndex("PathfinderID");

                    b.ToTable("pathfinder_achievement", (string)null);
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.PathfinderClass", b =>
                {
                    b.Property<int>("Grade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("grade");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Grade"));

                    b.Property<string>("ClassName")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Grade");

                    b.ToTable("pathfinder_class", (string)null);
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.PathfinderHonor", b =>
                {
                    b.Property<Guid>("PathfinderHonorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("pathfinder_honor_id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_timestamp");

                    b.Property<DateTime?>("Earned")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("earn_timestamp");

                    b.Property<Guid>("HonorID")
                        .HasColumnType("uuid")
                        .HasColumnName("honor_id");

                    b.Property<Guid>("PathfinderID")
                        .HasColumnType("uuid")
                        .HasColumnName("pathfinder_id");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer")
                        .HasColumnName("status_code");

                    b.HasKey("PathfinderHonorID");

                    b.HasIndex("HonorID");

                    b.HasIndex("PathfinderID");

                    b.HasIndex("StatusCode");

                    b.ToTable("pathfinder_honor", (string)null);
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.PathfinderHonorStatus", b =>
                {
                    b.Property<int>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("status_code");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StatusCode"));

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("StatusCode");

                    b.ToTable("pathfinder_honor_status", (string)null);
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.Achievement", b =>
                {
                    b.HasOne("PathfinderHonorManager.Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PathfinderHonorManager.Model.PathfinderClass", "PathfinderClass")
                        .WithMany()
                        .HasForeignKey("Grade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("PathfinderClass");
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.Pathfinder", b =>
                {
                    b.HasOne("PathfinderHonorManager.Model.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PathfinderHonorManager.Model.PathfinderClass", "PathfinderClass")
                        .WithMany()
                        .HasForeignKey("Grade")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Club");

                    b.Navigation("PathfinderClass");
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.PathfinderAchievement", b =>
                {
                    b.HasOne("PathfinderHonorManager.Model.Achievement", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PathfinderHonorManager.Model.Pathfinder", "Pathfinder")
                        .WithMany("PathfinderAchievements")
                        .HasForeignKey("PathfinderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("Pathfinder");
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.PathfinderHonor", b =>
                {
                    b.HasOne("PathfinderHonorManager.Model.Honor", "Honor")
                        .WithMany()
                        .HasForeignKey("HonorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PathfinderHonorManager.Model.Pathfinder", null)
                        .WithMany("PathfinderHonors")
                        .HasForeignKey("PathfinderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PathfinderHonorManager.Model.PathfinderHonorStatus", "PathfinderHonorStatus")
                        .WithMany()
                        .HasForeignKey("StatusCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Honor");

                    b.Navigation("PathfinderHonorStatus");
                });

            modelBuilder.Entity("PathfinderHonorManager.Model.Pathfinder", b =>
                {
                    b.Navigation("PathfinderAchievements");

                    b.Navigation("PathfinderHonors");
                });
#pragma warning restore 612, 618
        }
    }
}
